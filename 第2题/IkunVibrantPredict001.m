function [YmyIkunBabe,IkunXksFinalls,IkunAaffFinalls] = IkunVibrantPredict001(IloveIkunEkkks,~,~)
%IkunVibrantPredict001 neural network simulation function.
% 2022.11.4
% 动态型股票预测工具
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 前10个时刻的单价 [ [], 10 ]
%   Each X{1,ts} = Qx10 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 下一个时刻（时刻11）的单价 [ [], 1 ]
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
Ikun_Eks1Stepps.xoffset = [4.24256610824746;4.24256610824746;4.24256610824746;4.24256610824746;4.24256610824746;4.24256610824746;4.24256610824746;4.24256610824746;4.24256610824746;4.24256610824746];
Ikun_Eks1Stepps.gain = [0.0212080390745486;0.0212080390745486;0.0212080390745486;0.0212080390745486;0.0212080390745486;0.0212080390745486;0.0212080390745486;0.0212080390745486;0.0212080390745486;0.0212080390745486];
Ikun_Eks1Stepps.ymin = -1;

% Layer 1
BloodyIkun1 = [-1.9607808735347556084;-1.5512494425426599509;0.51964813836310841388;-0.32839525230466609651;0.16764248042493773427;0.16209003379596614858;-0.29852571141016986944;0.76269885255049230111;1.2536669590492042214;-1.4009266708133554236];
IterationWayIkun1_1 = [1.066163798171222421 -0.0090777400614611720303 0.40749884105355521635 0.61027406982139109637 0.54305277100764770548 -0.1762842734203632078 0.29398811817218106768 0.021270298613613725786 0.4358680247411998443 0.0084281554797103457738;0.283762178850379021 -0.38413987895757140123 0.18064971928648343447 0.034924573922473403642 -0.24174474177361421345 0.45806587673842802388 -0.12217061801523548814 0.31367794821257743987 -0.17885200986800983691 0.79614281613384185743;-0.70587722817030573719 0.38845872177272267045 0.90028649599149757066 -0.37486097604385004711 -0.16925970101872134244 -0.11617706547148318186 -1.2633495336688504995 0.56924271745894883257 -0.30496477677755318147 0.034290819996302089601;0.86170222837122034676 0.1804355422479916593 0.28929802111338498438 -0.62640704197646013274 0.2098981339847312555 -0.85124623735201798702 -0.23319188296694368101 0.1858602359384422531 0.82557492274149624212 0.6566416803662999957;0.47451071954423612587 -0.31538580486357481458 0.17619689754092665579 0.83306390650428729927 -0.8730042540841294052 0.19897871861127675031 -0.10767768511247433061 0.22821467728463223912 0.028548963424765073926 0.18052843649312810825;0.39782381381228892891 -0.14415914061942325386 -0.45616137895821146087 0.54117647153286807526 -0.29973135778527237871 -0.54460028450579078818 0.47993304787144380752 -0.36353279122670240087 0.30426815478204038978 -0.98877907772590878377;-0.51229789036903861099 -0.092545175978048427323 -0.03745603742451596857 -0.72067091589226850434 0.93212772721612946469 -0.24982996466414181258 0.25625286670752794871 0.24226664071340620055 0.77475562822398080787 -0.17875740528616326785;0.63089844870098676921 0.33618849378797616145 0.14623538752848849742 -0.4313769072529046178 0.32276561433612382945 -0.55062977909286159317 0.085667623156283942421 0.19034727329900569259 0.056893733005752511467 0.5621630542577540357;0.082247213536436200587 -0.00084792494052055586776 0.0085001120179894300299 0.04424187539382832407 0.083737483381090216383 0.17869418501342745897 0.13160419509659679327 0.025799543717397410009 0.018011551811082150004 0.21469793902535119767;-0.30468736088315490074 1.4754517735531893496 0.44855108835894186292 0.52295125133084063851 0.17232363392567623395 -0.60743310358158597584 -0.17863018473695763122 -0.10071344445734134454 0.1640344668700584041 -1.3292792387606910953];

% Layer 2
BloodyIkun2 = 0.27640291685644718944;
LongWayIkun2_1 = [0.0014890563316314734711 0.48611024270010905202 -0.18381181071863417209 -0.012124688473971806033 0.23679920736104345669 -0.19554093389799889757 0.20388370703411404228 0.064444848737714041653 0.99069049972105349688 0.65313543205382440515];

% Output 1
Ikun_WaaiStepps1.ymin = -1;
Ikun_WaaiStepps1.gain = 0.0212080390745486;
Ikun_WaaiStepps1.xoffset = 4.24256610824746;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(IloveIkunEkkks);
if ~isCellX
    IloveIkunEkkks = {IloveIkunEkkks};
end

% Dimensions
TS = size(IloveIkunEkkks,2); % timesteps
if ~isempty(IloveIkunEkkks)
    Q = size(IloveIkunEkkks{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
YmyIkunBabe = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    IloveIkunEkkks{1,ts} = IloveIkunEkkks{1,ts}';
    Xp1 = mapminmax_apply(IloveIkunEkkks{1,ts},Ikun_Eks1Stepps);
    
    % Layer 1
    a1 = tansig_apply(repmat(BloodyIkun1,1,Q) + IterationWayIkun1_1*Xp1);
    
    % Layer 2
    a2 = repmat(BloodyIkun2,1,Q) + LongWayIkun2_1*a1;
    
    % Output 1
    YmyIkunBabe{1,ts} = mapminmax_reverse(a2,Ikun_WaaiStepps1);
    YmyIkunBabe{1,ts} = YmyIkunBabe{1,ts}';
end

% Final Delay States
IkunXksFinalls = cell(1,0);
IkunAaffFinalls = cell(2,0);

% Format Output Arguments
if ~isCellX
    YmyIkunBabe = cell2mat(YmyIkunBabe);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
