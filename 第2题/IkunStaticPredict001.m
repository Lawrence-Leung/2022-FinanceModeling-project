function [YmyIkunBabe,IkunXksFinalls,IkunAaffFinalls] = IkunStaticPredict001(IloveIkunEkkks,~,~)
%IkunStaticPredict001 neural network simulation function.
% 2022.11.4
% 静态型股票预测工具
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 前10个时刻的单价 [ [], 10 ]
%   Each X{1,ts} = Qx10 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 下一个时刻（时刻11）的单价 [ [], 1 ]
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
Ikun_Eks1Stepps.xoffset = [0;0;0;0;0;0;0;0;0;0];
Ikun_Eks1Stepps.gain = [0.0368330423961473;0.0368330423961473;0.0368330423961473;0.0368330423961473;0.0368330423961473;0.0368330423961473;0.0368330423961473;0.0368330423961473;0.0368330423961473;0.0368330423961473];
Ikun_Eks1Stepps.ymin = -1;

% Layer 1
BloodyIkun1 = [1.5741523261778780363;-0.92054562680776608197;-0.81307114897169485701;0.1145514640261342254;-0.50147854916457967889;-0.091357223546991273011;-0.74561288396174951743;1.1394570559354848527;1.2777376174664178965;-1.6714543228740783576];
IterationWayIkun1_1 = [-0.78235435292572830246 -0.2504091350610265776 0.39346185520231552468 -0.72045156701183432624 -0.34035571882064763471 -0.59311198956301358631 -0.76682181819543882018 0.037088316369476043155 0.63886873658158382927 -0.65364450604112456222;-0.32368946928660913276 -0.9904865713428023799 -0.40768114365701690893 0.35863323792395590539 0.37825436141052548589 0.37490346740650593027 0.35450794216309156059 0.31627393306264539596 0.23724966320733806291 0.22471930959988700716;0.22213656764147438061 0.45851917280604548299 0.81877360098452522941 0.44876946509417081632 -0.68149439998728933432 -0.23649032511234932552 -0.85316473319526819896 0.26834935724326725026 -0.40651428812583034755 0.026130025938361396698;-0.70084716868629992614 -0.60259298899046020992 0.39065938154307205954 0.27244273964763343621 0.18807079345729138531 -0.26041853910348561341 -0.53775963028509787822 1.0520106576244367957 -0.4049861121516775686 0.2327537079181176416;0.52940002601364288815 0.042977844401281294073 0.29587650428328821084 0.21043192028792997994 -0.12664073563742189732 -0.47713673100520992421 -0.29082310114633791454 -0.59294397220592243158 0.33002691638658038231 -0.18013168932655218568;-0.53796397457710554146 -0.69099771683579314097 0.40939519423226999884 0.30958493055782349002 0.69960299310564544317 -0.5028793765724610676 -0.31721154143419261207 0.86328550007333970662 0.042497618836963013678 0.34825855371801206495;-0.66847902269787096152 0.54865742275173079445 0.30917117330669841024 0.27065896724007304508 0.71235882457794930112 0.4375111759653239063 0.16959011546591198916 0.29035544029047311021 0.72486467185252179135 0.44370143067027212336;0.39012211677442559798 0.047360367469080191793 -0.34163147277315397687 0.55476989363298834235 -0.86993660405517236889 0.56665346924806991868 -0.32838999075670682881 -0.88187797604307083255 -0.33707967118083781433 0.039475109029116446646;0.24082771342592065866 -0.51859121881627656681 0.25083354269991037233 0.25994820482087266367 0.36393627010973522706 -0.39420510393517965708 -0.046780936929910005295 0.0042477738715207781148 0.63454453799631582722 0.032516997486904723746;-0.76519480482749768768 0.19302198267844028479 -0.3341701403869153375 -0.89890906933835301729 0.25889998820241483246 -0.1125155488809339438 -0.9533095202515750044 -0.56470769225270400771 -0.29206227388948924339 -0.2044278202240026876];

% Layer 2
BloodyIkun2 = 0.29474327878742812015;
LongWayIkun2_1 = [0.005264171828304067477 0.35256522496677850098 0.82112752831978930157 -0.79591115548892477083 -0.69383956181756434312 0.48051843051024323294 -0.0025354859297596560666 -0.13119680566494537621 0.49693264210030735351 -0.00074083036759807735071];

% Output 1
Ikun_WaaiStepps1.ymin = -1;
Ikun_WaaiStepps1.gain = 0.0368330423961473;
Ikun_WaaiStepps1.xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(IloveIkunEkkks);
if ~isCellX
    IloveIkunEkkks = {IloveIkunEkkks};
end

% Dimensions
TS = size(IloveIkunEkkks,2); % timesteps
if ~isempty(IloveIkunEkkks)
    Q = size(IloveIkunEkkks{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
YmyIkunBabe = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    IloveIkunEkkks{1,ts} = IloveIkunEkkks{1,ts}';
    Xp1 = mapminmax_apply(IloveIkunEkkks{1,ts},Ikun_Eks1Stepps);
    
    % Layer 1
    a1 = tansig_apply(repmat(BloodyIkun1,1,Q) + IterationWayIkun1_1*Xp1);
    
    % Layer 2
    a2 = repmat(BloodyIkun2,1,Q) + LongWayIkun2_1*a1;
    
    % Output 1
    YmyIkunBabe{1,ts} = mapminmax_reverse(a2,Ikun_WaaiStepps1);
    YmyIkunBabe{1,ts} = YmyIkunBabe{1,ts}';
end

% Final Delay States
IkunXksFinalls = cell(1,0);
IkunAaffFinalls = cell(2,0);

% Format Output Arguments
if ~isCellX
    YmyIkunBabe = cell2mat(YmyIkunBabe);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
